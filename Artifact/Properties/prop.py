#import sys
#sys.path.append("../")
import Automata2

#########################################################################################
###Define DFA describing input property psi##############################################
######### (actions, states, initial state, final states, transition function)############
##This DFA defines "There should be atleast two a|b actions, followed by a "c" action.###
#########################################################################################
"""
psi = Automata2.DFA(
['a', 'b', 'c'],
['q0'],
'q0',
lambda q: q in ['q0'],
lambda q, a: {
        ('q0', 'a') : 'q0',
        ('q0', 'b') : 'q0',
        ('q0', 'c') : 'q0',
    }[(q, a)]
)
"""
###############################################################################

###############################################################################
###Define DFA describing property to enforcer phi##############################
######### (actions, states, initial state, final states, transition function)###
##This DFA defines "There should be atleast one "a|b" action, before action "c" can occur. 
###The sequence should end with a "c" action.####################################
###############################################################################

#########################################phi-1######################################
phi1 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3',  'q4'],
'q0',
lambda q: q in ['q3'],
lambda q, a: {
        ('q0', 'a') : 'q1',
        ('q0', 'b') : 'q0',
        ('q0', 'c') : 'q0',
        ('q1', 'a') : 'q1',
        ('q1', 'b') : 'q2',
        ('q1', 'c') : 'q4',
        ('q2', 'a') : 'q1',
        ('q2', 'b') : 'q2',
        ('q2', 'c') : 'q3',
        ('q3', 'a') : 'q1',
        ('q3', 'b') : 'q3',
        ('q3', 'c') : 'q3',
	('q4', 'a') : 'q1',
        ('q4', 'b') : 'q4',
        ('q4', 'c') : 'q4',
    }[(q, a)]
)
###############################################################################


dist_value1 = {
    'q0': 3,
    'q1': 2,
    'q2': 1,
    'q3': 0,
    'q4': 3  # Accepting state
}

#phi.assign_s_values(dist_value)


########################################phi-2#########################################
phi2 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3',  'q4'],
'q0',
lambda q: q in ['q1', 'q3'],
lambda q, a: {
        ('q0', 'a') : 'q1',
        ('q0', 'b') : 'q2',
        ('q0', 'c') : 'q0',
        ('q1', 'a') : 'q2',
        ('q1', 'b') : 'q3',
        ('q1', 'c') : 'q1',
        ('q2', 'a') : 'q2',
        ('q2', 'b') : 'q3',
        ('q2', 'c') : 'q0',
        ('q3', 'a') : 'q2',
        ('q3', 'b') : 'q4',
        ('q3', 'c') : 'q3',
	('q4', 'a') : 'q4',
        ('q4', 'b') : 'q4',
        ('q4', 'c') : 'q4',
    }[(q, a)]
)
###############################################################################


dist_value2 = {
    'q0': 1,
    'q1': 0,
    'q2': 1,
    'q3': 0,
    'q4': 50  # Accepting state
}

#phi.assign_s_values(dist_value)


#######################################phi-3##########################################
phi3 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3',  'q4'],
'q0',
lambda q: q in ['q2'],
lambda q, a: {
        ('q0', 'a') : 'q3',
        ('q0', 'b') : 'q3',
        ('q0', 'c') : 'q1',
        ('q1', 'a') : 'q2',
        ('q1', 'b') : 'q4',
        ('q1', 'c') : 'q4',
        ('q2', 'a') : 'q1',
        ('q2', 'b') : 'q2',
        ('q2', 'c') : 'q2',
        ('q3', 'a') : 'q1',
        ('q3', 'b') : 'q4',
        ('q3', 'c') : 'q4',
	('q4', 'a') : 'q3',
        ('q4', 'b') : 'q4',
        ('q4', 'c') : 'q4',
    }[(q, a)]
)
###############################################################################


dist_value3 = {
    'q0': 2,
    'q1': 1,
    'q2': 0,
    'q3': 2,
    'q4': 3  # Accepting state
}

#phi.assign_s_values(dist_value)

#"""
##################################phi-4###############################################

phi4 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3'],
'q0',
lambda q: q in ['q3'],
lambda q, a: {
        ('q0', 'a') : 'q1',
        ('q0', 'b') : 'q0',
        ('q0', 'c') : 'q2',
        ('q1', 'a') : 'q1',
        ('q1', 'b') : 'q3',
        ('q1', 'c') : 'q2',
        ('q2', 'a') : 'q1',
        ('q2', 'b') : 'q2',
        ('q2', 'c') : 'q2',
        ('q3', 'a') : 'q1',
        ('q3', 'b') : 'q3',
        ('q3', 'c') : 'q2',
    }[(q, a)]
)

###############################################################################
#phi = prop1.phi

dist_value4 = {
    'q0': 2,
    'q1': 1,
    'q2': 2,
    'q3': 0  # Accepting state
}

#phi.assign_s_values(dist_value)
#"""

##################################phi5###############################################
phi5 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3'],
'q0',
lambda q: q in ['q1'],
lambda q, a: {
        ('q0', 'a') : 'q1',
        ('q0', 'b') : 'q3',
        ('q0', 'c') : 'q3',
        ('q1', 'a') : 'q1',
        ('q1', 'b') : 'q2',
        ('q1', 'c') : 'q1',
        ('q2', 'a') : 'q3',
        ('q2', 'b') : 'q2',
        ('q2', 'c') : 'q1',
        ('q3', 'a') : 'q3',
        ('q3', 'b') : 'q3',
        ('q3', 'c') : 'q3',
    }[(q, a)]
)
###############################################################################


dist_value5 = {
    'q0': 1,
    'q1': 0,
    'q2': 1,
    'q3': 50 # Accepting state
}

#phi.assign_s_values(dist_value)


################################phi-6#################################################

phi6 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3',  'q4', 'q5'],
'q0',
lambda q: q in ['q0', 'q3'],
lambda q, a: {
        ('q0', 'a') : 'q5',
        ('q0', 'b') : 'q1',
        ('q0', 'c') : 'q1',
        ('q1', 'a') : 'q4',
        ('q1', 'b') : 'q5',
        ('q1', 'c') : 'q2',
        ('q2', 'a') : 'q5',
        ('q2', 'b') : 'q5',
        ('q2', 'c') : 'q3',
        ('q3', 'a') : 'q4',
        ('q3', 'b') : 'q5',
        ('q3', 'c') : 'q3',
	('q4', 'a') : 'q4',
        ('q4', 'b') : 'q5',
        ('q4', 'c') : 'q1',
	('q5', 'a') : 'q5',
        ('q5', 'b') : 'q5',
        ('q5', 'c') : 'q5',
    }[(q, a)]
)
###############################################################################


dist_value6 = {
    'q0': 3,
    'q1': 2,
    'q2': 1,
    'q3': 0,
    'q4': 3,
    'q5': 50  # Accepting state
}

#phi.assign_s_values(dist_value)


################################phi-7#################################################
phi7 = Automata2.DFA(
['a', 'b', 'c'],
['q0', 'q1', 'q2', 'q3',  'q4'],
'q0',
lambda q: q in ['q3', 'q2'],
lambda q, a: {
        ('q0', 'a') : 'q0',
        ('q0', 'b') : 'q1',
        ('q0', 'c') : 'q3',
        ('q1', 'a') : 'q1',
        ('q1', 'b') : 'q1',
        ('q1', 'c') : 'q2',
        ('q2', 'a') : 'q0',
        ('q2', 'b') : 'q2',
        ('q2', 'c') : 'q2',
        ('q3', 'a') : 'q4',
        ('q3', 'b') : 'q4',
        ('q3', 'c') : 'q4',
	('q4', 'a') : 'q4',
        ('q4', 'b') : 'q4',
        ('q4', 'c') : 'q4',
    }[(q, a)]
)
###############################################################################


dist_value7 = {
    'q0': 2,
    'q1': 1,
    'q2': 0,
    'q3': 50,
    'q4': 50  # Accepting state
}

#phi.assign_s_values(dist_value)
